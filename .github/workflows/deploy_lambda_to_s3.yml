name: Deploy Lambda and Layer to S3

on:
  push:
    branches:
      - main # Run this workflow on every push to the main branch
env:
  AWS_REGION: us-east-2

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    # Create a virtual environment and activate it
    - name: Create virtual environment
      run: |
        python -m venv lambda-env
        source lambda-env/bin/activate

    # Install dependencies into the virtual environment
    - name: Install dependencies
      run: |
        source lambda-env/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Package dependencies into a ZIP file for Lambda Layer
    - name: Create Zip file for Lambda Layer
      run: |
        source lambda-env/bin/activate
        mkdir python
        cp -r lambda-env/lib/python3.9/site-packages/. python/
        zip -r layer.zip python/

    # Package Lambda function into a separate ZIP file
    - name: Create Zip file for Lambda Function
      run: zip -r lambda_function.zip image_time_analysis.py

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::713984691710:role/github_action_role
        aws-region: ${{ env.AWS_REGION }}
          
    # Upload the layer ZIP file to the S3 bucket
    - name: Upload Layer to S3
      run: aws s3 cp layer.zip s3://mc-portfolio-s3-4-lambdas/img_processing/dependency_layer.zip

    # Upload the Lambda function ZIP file to the S3 bucket
    - name: Upload Lambda to S3
      run: aws s3 cp lambda_function.zip s3://mc-portfolio-s3-4-lambdas/img_processing/image_time_analysis.zip

    # Publish a new layer version
    - name: Publish New Layer Version
      run: |
        LAYER_VERSION=$(aws lambda publish-layer-version \
        --layer-name image-time-analysis-layer \
        --content S3Bucket=mc-portfolio-s3-4-lambdas,S3Key=img_processing/dependency_layer.zip \
        --query 'LayerVersionArn' \
        --output text)
        echo "LAYER_VERSION=$LAYER_VERSION" >> $GITHUB_ENV

    # update lambda and layer code in AWS  
    - name: Update Lambda Function Code
      run: aws lambda update-function-code --function-name ImageExifExtraction --s3-bucket mc-portfolio-s3-4-lambdas --s3-key img_processing/image_time_analysis.zip

    # Update Lambda function to use the new layer version
    - name: Update Lambda Function Configuration
      run: aws lambda update-function-configuration --function-name your-function-name --layers ${{ env.LAYER_VERSION }}